{"version":3,"file":"static/webpack/static/development/pages/index.js.7f41b21b3fa1a71ed54d.hot-update.js","sources":["webpack:///./pages/LifeTimeline.js"],"sourcesContent":["import \"../styles.less\";\n// import Datapoint from './Datapoint';\nimport {\n    Row, Col, Affix\n} from 'antd';\n\nimport { Controller, Scene } from 'react-scrollmagic';\nimport { Tween, Timeline } from 'react-gsap';\n\n\n\nexport default class LifeTimeline extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: 0,\n            height: 0\n        };\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this)\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions() {\n        this.setState({\n            width: window.innerWidth,\n            height: window.innerHeight\n        });\n    }\n\n    render() {\n        const lineLength = .75 * this.state.width;\n        const midpoint = 600 / 2;\n        // const x_arr = [75, 340, 540, 630, 840];\n        const triggers = ['#t1', '#t2', '#t3', '#t4'];\n        const x_arr = [350, 650, 850, 1050];\n        const timeline_adjust_right = this.state.width + 50;\n\n        const timeline_points = x_arr.map((element, i)  => {\n            var down = (i % 2 == 0 ? false : true);\n            const x_change = - 1 * timeline_adjust_right;\n            return(\n\n                <Controller>\n                    <Scene\n                    triggerElement={triggers[i]}\n                    duration={1000}\n                    pin={false}>\n\n\n                    {(progress) => (\n                            <Tween            \n                            from={{\n                                css: {  },\n                                attr: {transform: 'translate(0 0)'},\n                                ease: 'Power1',\n                                }}\n                              to={{\n                                css: {opacity: '1'},\n                                attr: {transform: 'translate(' + x_change + ' 0)'},\n                                ease: 'Strong.easeOut',\n                                duration: '100'\n                              }}\n                              totalProgress={progress}\n                              paused>\n                        <g id=\"animate3\" >\n                            <DataPoint midpoint={midpoint} xPoint={x_arr[i] + timeline_adjust_right} />\n                            <DataLine midpoint={midpoint} xPoint={x_arr[i] + timeline_adjust_right} up={down}/>\n                            <Image x={x_arr[i] - 30 + timeline_adjust_right} y={midpoint + (down? -150:90)} midpoint={midpoint}/>   \n                        </g> \n                    </Tween>\n                    )}\n                    </Scene>\n                  </Controller>\n            )\n        });\n\n        console.log(this.state.width);\n        return (\n            <div>\n            <Row>\n                {/* <Col span={20} offset={2}> */}\n                <Affix offsetTop={300}>\n                    <svg width=\"100%\" height={midpoint * 2} >\n                    <Controller>\n                    <Scene triggerElement=\"#t1\" duration={1000} pin={false}>\n                    {(progress) => (\n                            <Tween            \n                            to={{\n                                attr: { x1: '200' },\n                                cx: '200'\n                              }}       \n                              ease=\"Strong.easeOut\"\n                              totalProgress={progress}\n                              paused>\n                            \n                        <line className = \"timeline\" x1={this.state.width * 0.7} y1={midpoint} x2=\"100%\" y2={midpoint} style={{ strokeWidth: 4 }} />\n                        <circle className=\"label-circle\" cx={this.state.width * 0.7} cy={midpoint} r='9' />\n                        </Tween> \n                    )}\n                    </Scene>\n                  </Controller>\n                        \n                        \n                        {timeline_points}\n\n                        <text x=\"95%\"  fill=\"black\" fontSize=\"24px\" textAnchor=\"end\">\n                            <tspan x=\"94%\" y={midpoint - 100}>from Seattle.</tspan>\n                            <tspan x=\"94%\" y={midpoint - 70}>Living in Oakland.</tspan>\n                        </text>\n\n                        <text x=\"97%\"  fill=\"black\" fontSize=\"24px\" textAnchor=\"end\">\n                            <tspan x=\"94%\" y={midpoint + 110}>passionate about data science</tspan>\n                            <tspan x=\"94%\" y={midpoint + 140}>music, weather forecasting</tspan>\n                            <tspan x=\"94%\" y={midpoint + 170}>and all things skiing.</tspan>\n                        </text>\n                    </svg>\n                    </Affix>\n                {/* </Col> */}\n            </Row>\n            <Row>\n            <Col span={24} style={{height: '100px'}}>\n                <div id=\"t1\" style={{ color: 'black', fontSize: '20px'}}>\n                TRIGGER\n                </div>\n            </Col>\n            </Row>\n            \n            <Row>\n            <Col span={24} style={{height: '200px'}}>\n                <div id=\"t2\" style={{ color: 'black', fontSize: '20px'}}/>\n                TRIGGER 2/>\n                </Col>\n            </Row>\n\n            <Row>\n            <Col span={24} style={{height: '500px'}}>\n                <div id=\"t3\" style={{ color: 'black', fontSize: '20px'}}/>\n                TRIGGER 3/>\n                </Col>\n            </Row>\n\n            <Row>\n            <Col span={24} style={{height: '1000px'}}>\n                <div id=\"t4\" style={{ color: 'black', fontSize: '20px'}}/>\n                TRIGGER 4/>\n                </Col>\n            </Row>\n            </div>\n        )\n    }\n}\n\n\nfunction DataPoint(props) {\n    return (\n        <circle className=\"label-circle\" cx={props.xPoint} cy={props.midpoint} r='9' />\n    );\n}\n\nfunction DataLine(props) {\n    return (\n        <line className=\"label-line-color\"\n            x1={props.xPoint}\n            y1={props.midpoint}\n            x2={props.xPoint} \n            y2={props.up ? props.midpoint - 85: props.midpoint + 85} \n            style={{ strokeWidth: 3, strokeDasharray: 4 }} />\n    );\n}\n\nfunction Image(props) {\n    return (\n        <rect x={props.x} y={props.y} width=\"60\" height=\"60\" style={{ strokeWidth: 1, stroke: 'black', strokeDasharray: 4, fill: 'white'}}/>\n    )\n}\n\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAKA;AACA;AACA;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAOA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAFA;AAIA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AAMA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBA;AAyBA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA;AAolJA;AACA;AADA;AACA;AAqJA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;A","sourceRoot":""}